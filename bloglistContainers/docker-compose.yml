services:
  app:
    image: bloglist-frontend
    build:
      context: ./bloglist-frontend # The context will pick this directory as the "build context"
      dockerfile: Dockerfile # This will simply tell which dockerfile to read
    volumes:
      - ./bloglist-frontend:/usr/src/app # The path can be relative, so ./ is enough to say "the same location as the docker-compose.yml"
      - /usr/src/app/node_modules
    ports:
      - 5173:5173
    # environment:
    #   - PORT=3003
    container_name: bloglist-frontend # This will name the container hello-front-dev
  # debug-helper:
  #   image: busybox

  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.dev.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: reverse-proxy
    depends_on:
      - app
      - server
    
  # mongo:
  #   image: mongo
  #   ports:
  #    - 3456:27017
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: root
  #     MONGO_INITDB_ROOT_PASSWORD: example
  #     MONGO_INITDB_DATABASE: the_database
  #   volumes:
  #     # - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
  #     - ./mongo_data:/usr/src/app

  # redis:
  #   image: redis
  #   ports:
  #     - 6379:6379
  #   command: ['redis-server', '--appendonly', 'yes'] # Overwrite the CMD
  #   volumes:
  #     - ./todo-backend/redis_data:/data

  server:
    image: bloglist-backend
    build:
      context: ./bloglist-backend
      dockerfile: Dockerfile
    ports:
      - 3003:3003
    environment:
      # - REDIS_URL=redis://redis:6379  # Correcting the URL scheme
      # - MONGO_URL=mongodb://root:example@mongo:27017/the_database  # Correcting the username and password
      - MONGODB_URI=mongodb+srv://eperry2688:mongodbpassword@cluster0.meev38s.mongodb.net/bloglistApp?retryWrites=true&w=majority
      # - NODE_ENV=development
    env_file:
      - ./bloglist-backend/.env
    container_name: bloglist-backend
    volumes:
      - ./bloglist-backend:/usr/src/app
      - /usr/src/app/node_modules
    # depends_on:
    #   - mongo
    #   - redis

# volumes:
#   mongo_data:
#     driver: local
  # node_modules:
#   redis_data:
#     driver: local